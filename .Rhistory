theme_bw() +
labs(
x = "Year",
y = "Band Formation Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Bands Formed per Year",
subtitle = "to detect patterns of band formation growth or reduction")
count_rate_diff
count_diff <-
ggplot(data = formation_rate,
aes(x = formed,
y = fan_rate_percent)) +
geom_line()+ # left out hline and geom_point since it seemed unnecessary
theme_bw() +
labs(
x = "Year",
y = "Fan Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Fans per Year",
subtitle = "to detect patterns of fan growth or reduction")
count_diff
combined_graph_count <- ggplot(formation_rate)+
geom_line(mapping= aes(x = formed,
y = count, color = "purple"))+
geom_line(mapping= aes(x = formed,
y = Diff_count, color = "orange")) +
geom_hline(yintercept = 0, size = 0.5) +
geom_vline(xintercept = 1990) +
theme(legend.position = "none") +
labs(
x = "Year Bands Formed",
y = "Band Formation Count +/-",
title = "Line Graph of Bands Formed + Net Losses/Gains per Year")
combined_graph_count
knitr::opts_chunk$set(collapse = TRUE)
library(skimr) # get overview of data
library(tidyverse) # data management + ggplot2 graphics
library(readxl) # import excel data
library(ggplot2) # plots
library(gtsummary) # summary statistics and tests
library(here) # helps with file management
library(knitr)
library(janitor) # for data cleaning, making tables
library(wesanderson) # ggplot2 palettes
library(paletteer) # extra ggplot2 palettes
library(dplyr)
library(broom)
library(stringr)
library(viridisLite)
library(glue) # this was added so gt() would show
library(gt)
metal_bands <- read_excel("Metal_Bands_BSTA.xlsx",
col_types = c("numeric", "text", "numeric",
"numeric", "text", "numeric", "text")) # changing col_types here will automatically change the numeric columns as numeric, while keeping NA values as NA
gt(head(metal_bands)) # previewed the data to get a peek of how it's formatted
skim_metal <- skim(metal_bands) %>% as_tibble() %>% print() # saved skim() to keep as a reference point
# filter, make data table showing only U.S. bands
metal_filtered <- metal_bands %>%
filter(origin %in% ("USA"))
# remove the column "...1" (ranked in popularity) and "split" since it is not important in this analysis and takes up space
metal_filtered <- subset(metal_filtered, select = -c(1,6))
# this allows me to minimize unnecessary bulk so I can transform and analyze easier
# mutate and create new table with a factored column labeling which bands formed between the years 1980-1989 and 1990-1999
metal_new <- metal_filtered %>%
mutate(
formed_category = case_when(
formed >= 1980 &
formed < 1990 ~ "1980-1989",
formed >= 1990 &
formed < 2000 ~ "1990-1999"
)) %>%
mutate(formed_category = factor(formed_category))
metal_new <- na.omit(metal_new) # this gets rid of all rows containing N/A
# na.omit shows only bands (all styles) that formed within the two decades
skim_metal_new <- skim(metal_new) %>% as_tibble() %>% print()
# saved this skim table as another reference point, making sure there are no missing values and the completion rate is 1 for all columns
#454 out of 5,000 bands (all styles) that formed in the USA between 1980-1999
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
metal_complete <- dplyr::filter( # dplyr::filter because this wouldn't work without specifically calling the package
metal_new, grepl("death|black", style, ignore.case = TRUE)) %>% #grepl(keywords, column)
filter(!duplicated(band_name)) # use !duplicated to make extra sure there is no overlap in band_names
(head(metal_complete)) %>% print()
skim_metal_complete <- skim(metal_complete) %>% as_tibble() %>% view()  # saved for another reference point, looking at this table I'm able to see the band count for either black or death metal style has dropped to 122 over the 2 decades
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
# shows/organizes how many bands were formed, between the two decades
decade_count <- metal_complete %>%
group_by(formed_category) %>%
summarize(count = n())
gt(decade_count)
# saved this to compare for analysis and visualization, n = 122, 80s = 43, 90s = 79
# shows/organizes total fans between the two decades
fan_count <- metal_complete %>% # shows decade sum of fans
group_by(formed_category) %>%
summarize(sum_fans = sum(fans)) %>% print()
# n = 18,117, 80s = 10,408, 90s = 7709
N_fan_count <- sum(fan_count$sum_fans) # used this to pull for later if needed
# shows/organizes the average # of fans per band between the two decades
mean_fan_group <- metal_complete %>%
group_by(formed_category) %>%
summarize(mean_fans = mean(fans)) %>% print()
# avg 242 fans/band in 80s, avg 97.6 fans/band in 90s
count_and_mean_fans <- bind_cols(fan_count, mean_fan_group[2])
gt(count_and_mean_fans)
# noted- 80s = n(43), 90s = n(79) - the data is showing that though there were less death/black metal bands formed in the 80's the bands that were formed during this period had significantly more fans than those formed in the 90s
# breaking down these transformations below, into separate tables, is easier for me to understand what I'm looking at and understand, then after looking at them individually, I will bind them into one data frame and then look at the whole picture
# shows/organizes band formation count per year 1980-1999
i_fan_count <- metal_complete %>%
group_by(formed) %>%
summarize(count = n()) %>%
print()
# shows/organizes total amount of fans per year 1980-1999
i_fan_sum <- metal_complete %>%
group_by(formed) %>%
summarize(sum_fans = sum(fans)) %>%
print()
# shows/organizes average fans per year 1980-1999
mean_i_fan_count <- metal_complete %>%
group_by(formed) %>%
summarize(mean_fans = mean(fans)) %>% print()
# combined 3 data frames from above, [] extracts the column wanted, avoiding duplicate columns
summary_i_fans <- bind_cols(i_fan_count, i_fan_sum[2], mean_i_fan_count[2]) %>% print()
# same process as last time I used case_when() but I'm just adding this to the new data frame for making it easier on me when I start making data visualizations (this is the only character variable besides USA, which is all the same)
use_summary_i_fans <- summary_i_fans %>%
mutate(
formed_category = case_when(
formed >= 1980 &
formed < 1990 ~ "1980-1989",
formed >= 1990 &
formed < 2000 ~ "1990-1999")) %>%
mutate(formed_category = factor(formed_category))
# rearranged columns so the years could be together for easier interpretations
use_summary_i_fans <- use_summary_i_fans[, c(1,5,2,3,4)] %>% print()
# this was a function I spent way too much time on trying to figure out the differences and changes (rate) in fan counts per year, shout out to stack exchange
formation_rate <- use_summary_i_fans %>%
# first sort by year, most likely this was but helps make sure it's all uniform
arrange(formed) %>%
mutate(Diff_year = formed - lag(formed),  # Difference in time (just in case there are gaps)
Diff_fans = sum_fans - lag(sum_fans), # Difference in count between years
fan_rate_percent = (Diff_fans / Diff_year)/sum_fans * 100) %>%
mutate(Diff_year = formed - lag(formed),  # Difference in time (just in case there are gaps)
Diff_count = count - lag(count), # Difference in count between years
count_rate_percent = (Diff_count / Diff_year)/count * 100) %>% print()
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
density_sum_fans <- ggplot(data = formation_rate,
aes(x = sum_fans,
fill = formed_category # must always be categorical
)) +
geom_density(alpha = 0.3) # transparency +
scale_fill_discrete(name = "Decade") # renames the legend +
labs(
x = "Fans per Year",
y = "Density",
title = "Density Plot of Total Fans Accumulated per Year (1980-1999)")
density_sum_fans
library(ggridges)
ridgeline_mean_fans<- ggplot(data = use_summary_i_fans,
aes(x = mean_fans,
y = formed_category)) +
geom_density_ridges_gradient() +
aes(fill = formed_category) +
scale_fill_discrete(name = "Decade") +
labs(
x = "Average Fans Accumulated per Year",
y = "Decade",
title = "Ridgeline Density Plot of Average Fans Accumulated per Year (1980-1999)") +
theme(axis.text.x = element_text(angle = -30, hjust = 0))
ridgeline_mean_fans
count_rate_diff <-
ggplot(data = formation_rate,
aes(x = formed,
y = count_rate_percent)) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0)+
theme_bw() +
labs(
x = "Year",
y = "Band Formation Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Bands Formed per Year",
subtitle = "to detect patterns of band formation growth or reduction")
count_rate_diff
count_diff <-
ggplot(data = formation_rate,
aes(x = formed,
y = fan_rate_percent)) +
geom_line()+ # left out hline and geom_point since it seemed unnecessary
theme_bw() +
labs(
x = "Year",
y = "Fan Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Fans per Year",
subtitle = "to detect patterns of fan growth or reduction")
count_diff
combined_graph_count <- ggplot(formation_rate)+
geom_line(mapping= aes(x = formed,
y = count, color = "purple"))+
geom_line(mapping= aes(x = formed,
y = Diff_count, color = "orange")) +
geom_hline(yintercept = 0, size = 0.5) +
geom_vline(xintercept = 1990) +
theme(legend.position = "none") +
labs(
x = "Year Bands Formed",
y = "Band Formation Count +/-",
title = "Line Graph of Bands Formed + Net Losses/Gains per Year")
combined_graph_count
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library(skimr) # get overview of data
library(tidyverse) # data management + ggplot2 graphics
library(readxl) # import excel data
library(ggplot2) # plots
library(gtsummary) # summary statistics and tests
library(here) # helps with file management
library(knitr)
library(janitor) # for data cleaning, making tables
library(wesanderson) # ggplot2 palettes
library(paletteer) # extra ggplot2 palettes
library(dplyr)
library(broom)
library(stringr)
library(viridisLite)
library(glue) # this was added so gt() would show
library(gt)
library(readxl)
Metal_Bands_BSTA <- read_excel("data/Metal_Bands_BSTA.xlsx",
col_types = c("numeric", "text", "numeric",
"numeric", "text", "numeric", "text"))
View(Metal_Bands_BSTA)
Metal_Bands_BSTA <- read_excel("data/Metal_Bands_BSTA.xlsx",
col_types = c("numeric", "text", "numeric",
"numeric", "text", "numeric", "text"))
print(Metal_Bands_BSTA)
metal_bands <- Metal_Bands_BSTA %>% read_excel("Metal_Bands_BSTA.xlsx",
col_types = c("numeric", "text", "numeric",
"numeric", "text", "numeric", "text")) # changing col_types here will automatically change the numeric columns as numeric, while keeping NA values as NA
gt(head(metal_bands)) # previewed the data to get a peek of how it's formatted
skim_metal <- skim(metal_bands) %>% as_tibble() %>% print() # saved skim() to keep as a reference point
print(Metal_Bands_BSTA)
metal_bands <- Metal_Bands_BSTA # previewed the data to get a peek of how it's formatted
skim_metal <- skim(metal_bands) %>% as_tibble() %>% print() # saved skim() to keep as a reference point
# filter, make data table showing only U.S. bands
metal_filtered <- metal_bands %>%
filter(origin %in% ("USA"))
# remove the column "...1" (ranked in popularity) and "split" since it is not important in this analysis and takes up space
metal_filtered <- subset(metal_filtered, select = -c(1,6))
# this allows me to minimize unnecessary bulk so I can transform and analyze easier
print(Metal_Bands_BSTA)
metal_bands <- Metal_Bands_BSTA # previewed the data to get a peek of how it's formatted
skim_metal <- skim(metal_bands) %>% as_tibble() %>% print() # saved skim() to keep as a reference point
# filter, make data table showing only U.S. bands
metal_filtered <- metal_bands %>%
filter(origin %in% ("USA"))
# remove the column "...1" (ranked in popularity) and "split" since it is not important in this analysis and takes up space
metal_filtered <- subset(metal_filtered, select = -c(1,6))
# this allows me to minimize unnecessary bulk so I can transform and analyze easier
# mutate and create new table with a factored column labeling which bands formed between the years 1980-1989 and 1990-1999
metal_new <- metal_filtered %>%
mutate(
formed_category = case_when(
formed >= 1980 &
formed < 1990 ~ "1980-1989",
formed >= 1990 &
formed < 2000 ~ "1990-1999"
)) %>%
mutate(formed_category = factor(formed_category))
metal_new <- na.omit(metal_new) # this gets rid of all rows containing N/A
# na.omit shows only bands (all styles) that formed within the two decades
skim_metal_new <- skim(metal_new) %>% as_tibble() %>% print()
# saved this skim table as another reference point, making sure there are no missing values and the completion rate is 1 for all columns
#454 out of 5,000 bands (all styles) that formed in the USA between 1980-1999
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
metal_complete <- dplyr::filter( # dplyr::filter because this wouldn't work without specifically calling the package
metal_new, grepl("death|black", style, ignore.case = TRUE)) %>% #grepl(keywords, column)
filter(!duplicated(band_name)) # use !duplicated to make extra sure there is no overlap in band_names
(head(metal_complete)) %>% print()
skim_metal_complete <- skim(metal_complete) %>% as_tibble() %>% view()  # saved for another reference point, looking at this table I'm able to see the band count for either black or death metal style has dropped to 122 over the 2 decades
(head(metal_complete)) %>% print()
skim_metal_complete <- skim(metal_complete) %>% as_tibble()  # saved for another reference point, looking at this table I'm able to see the band count for either black or death metal style has dropped to 122 over the 2 decades
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
# shows/organizes how many bands were formed, between the two decades
decade_count <- metal_complete %>%
group_by(formed_category) %>%
summarize(count = n())
gt(decade_count)
# saved this to compare for analysis and visualization, n = 122, 80s = 43, 90s = 79
# shows/organizes total fans between the two decades
fan_count <- metal_complete %>% # shows decade sum of fans
group_by(formed_category) %>%
summarize(sum_fans = sum(fans)) %>% print()
# n = 18,117, 80s = 10,408, 90s = 7709
N_fan_count <- sum(fan_count$sum_fans) # used this to pull for later if needed
# shows/organizes the average # of fans per band between the two decades
mean_fan_group <- metal_complete %>%
group_by(formed_category) %>%
summarize(mean_fans = mean(fans)) %>% print()
# avg 242 fans/band in 80s, avg 97.6 fans/band in 90s
count_and_mean_fans <- bind_cols(fan_count, mean_fan_group[2])
gt(count_and_mean_fans)
# noted- 80s = n(43), 90s = n(79) - the data is showing that though there were less death/black metal bands formed in the 80's the bands that were formed during this period had significantly more fans than those formed in the 90s
blogdown:::serve_site()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library(skimr) # get overview of data
library(tidyverse) # data management + ggplot2 graphics
library(readxl) # import excel data
library(ggplot2) # plots
library(gtsummary) # summary statistics and tests
library(here) # helps with file management
library(knitr)
library(janitor) # for data cleaning, making tables
library(wesanderson) # ggplot2 palettes
library(paletteer) # extra ggplot2 palettes
library(dplyr)
library(broom)
library(stringr)
library(viridisLite)
library(glue) # this was added so gt() would show
library(gt)
print(Metal_Bands_BSTA)
metal_bands <- Metal_Bands_BSTA # previewed the data to get a peek of how it's formatted
skim_metal <- skim(metal_bands) %>% as_tibble() %>% print() # saved skim() to keep as a reference point
# filter, make data table showing only U.S. bands
metal_filtered <- metal_bands %>%
filter(origin %in% ("USA"))
# remove the column "...1" (ranked in popularity) and "split" since it is not important in this analysis and takes up space
metal_filtered <- subset(metal_filtered, select = -c(1,6))
# this allows me to minimize unnecessary bulk so I can transform and analyze easier
# mutate and create new table with a factored column labeling which bands formed between the years 1980-1989 and 1990-1999
metal_new <- metal_filtered %>%
mutate(
formed_category = case_when(
formed >= 1980 &
formed < 1990 ~ "1980-1989",
formed >= 1990 &
formed < 2000 ~ "1990-1999"
)) %>%
mutate(formed_category = factor(formed_category))
metal_new <- na.omit(metal_new) # this gets rid of all rows containing N/A
# na.omit shows only bands (all styles) that formed within the two decades
skim_metal_new <- skim(metal_new) %>% as_tibble() %>% print()
# saved this skim table as another reference point, making sure there are no missing values and the completion rate is 1 for all columns
#454 out of 5,000 bands (all styles) that formed in the USA between 1980-1999
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
metal_complete <- dplyr::filter( # dplyr::filter because this wouldn't work without specifically calling the package
metal_new, grepl("death|black", style, ignore.case = TRUE)) %>% #grepl(keywords, column)
filter(!duplicated(band_name)) # use !duplicated to make extra sure there is no overlap in band_names
(head(metal_complete)) %>% print()
skim_metal_complete <- skim(metal_complete) %>% as_tibble()  # saved for another reference point, looking at this table I'm able to see the band count for either black or death metal style has dropped to 122 over the 2 decades
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
# shows/organizes how many bands were formed, between the two decades
decade_count <- metal_complete %>%
group_by(formed_category) %>%
summarize(count = n())
gt(decade_count)
# saved this to compare for analysis and visualization, n = 122, 80s = 43, 90s = 79
# shows/organizes total fans between the two decades
fan_count <- metal_complete %>% # shows decade sum of fans
group_by(formed_category) %>%
summarize(sum_fans = sum(fans)) %>% print()
# n = 18,117, 80s = 10,408, 90s = 7709
N_fan_count <- sum(fan_count$sum_fans) # used this to pull for later if needed
# shows/organizes the average # of fans per band between the two decades
mean_fan_group <- metal_complete %>%
group_by(formed_category) %>%
summarize(mean_fans = mean(fans)) %>% print()
# avg 242 fans/band in 80s, avg 97.6 fans/band in 90s
count_and_mean_fans <- bind_cols(fan_count, mean_fan_group[2])
gt(count_and_mean_fans)
# noted- 80s = n(43), 90s = n(79) - the data is showing that though there were less death/black metal bands formed in the 80's the bands that were formed during this period had significantly more fans than those formed in the 90s
# breaking down these transformations below, into separate tables, is easier for me to understand what I'm looking at and understand, then after looking at them individually, I will bind them into one data frame and then look at the whole picture
# shows/organizes band formation count per year 1980-1999
i_fan_count <- metal_complete %>%
group_by(formed) %>%
summarize(count = n()) %>%
print()
# shows/organizes total amount of fans per year 1980-1999
i_fan_sum <- metal_complete %>%
group_by(formed) %>%
summarize(sum_fans = sum(fans)) %>%
print()
# shows/organizes average fans per year 1980-1999
mean_i_fan_count <- metal_complete %>%
group_by(formed) %>%
summarize(mean_fans = mean(fans)) %>% print()
# combined 3 data frames from above, [] extracts the column wanted, avoiding duplicate columns
summary_i_fans <- bind_cols(i_fan_count, i_fan_sum[2], mean_i_fan_count[2]) %>% print()
# same process as last time I used case_when() but I'm just adding this to the new data frame for making it easier on me when I start making data visualizations (this is the only character variable besides USA, which is all the same)
use_summary_i_fans <- summary_i_fans %>%
mutate(
formed_category = case_when(
formed >= 1980 &
formed < 1990 ~ "1980-1989",
formed >= 1990 &
formed < 2000 ~ "1990-1999")) %>%
mutate(formed_category = factor(formed_category))
# rearranged columns so the years could be together for easier interpretations
use_summary_i_fans <- use_summary_i_fans[, c(1,5,2,3,4)] %>% print()
# this was a function I spent way too much time on trying to figure out the differences and changes (rate) in fan counts per year, shout out to stack exchange
formation_rate <- use_summary_i_fans %>%
# first sort by year, most likely this was but helps make sure it's all uniform
arrange(formed) %>%
mutate(Diff_year = formed - lag(formed),  # Difference in time (just in case there are gaps)
Diff_fans = sum_fans - lag(sum_fans), # Difference in count between years
fan_rate_percent = (Diff_fans / Diff_year)/sum_fans * 100) %>%
mutate(Diff_year = formed - lag(formed),  # Difference in time (just in case there are gaps)
Diff_count = count - lag(count), # Difference in count between years
count_rate_percent = (Diff_count / Diff_year)/count * 100) %>% print()
# Reminder: objective is to find out the growth/loss rate of bands that are death and/or black metal in the USA, between the two decades
density_sum_fans <- ggplot(data = formation_rate,
aes(x = sum_fans,
fill = formed_category # must always be categorical
)) +
geom_density(alpha = 0.3) # transparency +
scale_fill_discrete(name = "Decade") # renames the legend +
labs(
x = "Fans per Year",
y = "Density",
title = "Density Plot of Total Fans Accumulated per Year (1980-1999)")
density_sum_fans
library(ggridges)
ridgeline_mean_fans<- ggplot(data = use_summary_i_fans,
aes(x = mean_fans,
y = formed_category)) +
geom_density_ridges_gradient() +
aes(fill = formed_category) +
scale_fill_discrete(name = "Decade") +
labs(
x = "Average Fans Accumulated per Year",
y = "Decade",
title = "Ridgeline Density Plot of Average Fans Accumulated per Year (1980-1999)") +
theme(axis.text.x = element_text(angle = -30, hjust = 0))
ridgeline_mean_fans
count_rate_diff <-
ggplot(data = formation_rate,
aes(x = formed,
y = count_rate_percent)) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0)+
theme_bw() +
labs(
x = "Year",
y = "Band Formation Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Bands Formed per Year",
subtitle = "to detect patterns of band formation growth or reduction")
count_rate_diff
count_diff <-
ggplot(data = formation_rate,
aes(x = formed,
y = fan_rate_percent)) +
geom_line()+ # left out hline and geom_point since it seemed unnecessary
theme_bw() +
labs(
x = "Year",
y = "Fan Rate (%) Per Year (1980-1999)",
title = "Change in Rate of Fans per Year",
subtitle = "to detect patterns of fan growth or reduction")
count_diff
combined_graph_count <- ggplot(formation_rate)+
geom_line(mapping= aes(x = formed,
y = count, color = "purple"))+
geom_line(mapping= aes(x = formed,
y = Diff_count, color = "orange")) +
geom_hline(yintercept = 0, size = 0.5) +
geom_vline(xintercept = 1990) +
theme(legend.position = "none") +
labs(
x = "Year Bands Formed",
y = "Band Formation Count +/-",
title = "Line Graph of Bands Formed + Net Losses/Gains per Year")
combined_graph_count
blogdown:::serve_site()
$ choco install hugo -confirm
choco install hugo -confirm
./hugo
blogdown:::serve_site()
install.packages(c("broom.helpers", "checkmate", "cli", "dplyr", "ggplot2", "gt", "gtsummary", "labelled", "MASS", "moderndive", "nloptr", "openssl", "ps", "quantreg", "RcppArmadillo", "roxygen2", "testthat", "tibble", "usethis", "xfun"))
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
https://github.com/MfromOregon/FirstBlog.git
install.packages("githubinstall")
install.packages("git2r")
git2r::commit(repo = https://github.com/MfromOregon/FirstBlog)
git --version
git remote add origin https://github.com/MfromOregon/FirstBlog.git
git branch -M main
git push -u origin main
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
install.packages(c("checkmate", "cli", "dplyr", "future", "MASS", "nloptr", "openssl", "packrat", "ps", "quantreg", "RcppArmadillo", "renv", "roxygen2", "testthat", "tibble", "xfun"))
install.packages(c("checkmate", "cli", "dplyr", "MASS", "nloptr", "openssl", "ps", "quantreg", "RcppArmadillo", "roxygen2", "testthat", "tibble", "xfun"))
blogdown:::serve_site()
rmarkdown::render_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(blogdown)
library(broom)
library(extrafont)
library(fontawesome)
blogdown:::preview_site()
blogdown:::serve_site()
